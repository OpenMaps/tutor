<html>
<head>
    <meta charset="utf-8">
    <title>Kenya Counties</title>
    <script src="./js/d3.min.js"></script><!--
    <script src="d/k-counties.js"></script>-->
    <link href="http://fonts.googleapis.com/css?family=Montserrat" rel="stylesheet" type="text/css">
 
    <style>
		body {
			padding: 0;
			margin: 0;
			background: whitesmoke;
		}
		svg {
            font-family: sans-serif;
            font-size: 10px;
            font-weight: normal;
        }
		h1 {
			position: absolute;
			left: 20px;
			top: 10px;
			font-family: "Proxima Nova", Montserrat, sans-serif;
			font-size: 2em;
			font-weight: 100;
			color: #bb5DAA;
		}
		h2 {
			position: absolute;
			left: 20px;
			top: 10px;
			font-family: "Proxima Nova", Montserrat, sans-serif;
			font-size: 2em;
			font-weight: 100;
			color: #005DAA;
		}
		h2 {
			top: 50px;
			font-size: 1.6em;
		}
		.county {
		  stroke: #fff;
		  fill:#00FF00;
		}
		.hover {
			fill: #00FFFF;
			cursor: pointer;   
		} 
		text.halo {
            opacity: 0.7;
            stroke: #fff;
            stroke-width: 5px;
            
        }
        stroke-miterlimit: 1;
    </style>
</head>
<body>
    <h1>Kenya Counties</h1>
    <h2></h2>
  <script>
        
    var width = window.innerWidth,
        height = window.innerHeight;
    
    var svg = d3.select( "body" )
          .append( "svg" )
          .attr( "width", width )
          .attr( "height", height );
      
    //create Kenya mercator projection, centered on Nairobi
	var projection = d3.geo.mercator()
		.center([39.03111,0.25141])
		.scale([3500])
		.translate([width/2, height/2]);
        
     //create svg path generator using the projection
    var geoPath = d3.geo.path()
        .projection(projection);
        
    //quantized colors
    var color = d3.scale.linear()
					.range(["#FFA500"]);
	//csv
	d3.csv("d/election-2012.csv", function(data) {
		//color domains
		color.domain([
				d3.min(data, function(d) { return d.Margin; }),
				d3.max(data, function(d) { return d.Margin; })
				]);
	
	//load json
	d3.json("d/k-counties.json", function(json) {
		
		//Merge the election data and GeoJSON
		//Loop through once for each election data value
		for (var i = 0; i < data.length; i++) {
			
			//Grab County codes
			var dataCode = data[i].codes;
			
			//Grab data value, and convert from string to float
			var dataMargin = parseFloat(data[i].Margin);
		
			//Find the corresponding state inside the GeoJSON
			for (var j = 0; j < json.features.length; j++) {
				var jsonCode = json.features[j].properties.ccodes;
					if (dataCode == jsonCode) {

						//Copy the data value into the JSON
						json.features[j].properties.margin = dataMargin;

						//Stop looking through the JSON
						break;
					}
			}
		}
		
		svg.selectAll("path")
			.data(json.features)
			.enter()
			.append("path")
			.attr("d", geoPath)
			.style("fill", function(d) {
				//Get data value
				var mar = d.properties.margin;
				if (mar < 0) {
					return color(mar);
				} else {
					return "#ed1e07";
				}
			})
			.style("stroke-width", "1")
			.style("stroke", "white")
			.attr("class","county")
			.on("mouseover", function(d){
				d3.select("h1").text(d.properties.id);
				d3.select("h2").text(d.properties.Name);
				d3.select(this).attr("class","county hover");})
			.on("mouseout", function(d){
				d3.select("h1").text("");
				d3.select("h2").text("");
				d3.select(this).attr("class","county");});
				
			var labels = svg.append('g').attr('class', 'labels');
			//Labels
			//Adds the halo effect
			labels.selectAll('.label').data(json.features).enter().append('text')
				.attr("class", "halo")
				.attr('transform', function(d) {
					return "translate(" + geoPath.centroid(d) + ")";
				})
				.style('text-anchor', 'middle')
				.text(function(d) {
					return d.properties.ccodes
				});
			//Adds the label placement 
			labels.selectAll('.label').data(json.features).enter().append('text')
				.attr("class", "label")
				.attr('transform', function(d) {
					return "translate(" + geoPath.centroid(d) + ")";
				})
				.style('text-anchor', 'middle')
				.text(function(d) {
					return d.properties.ccodes
				});
			
		});
});	
  </script>
</body>
</html>
