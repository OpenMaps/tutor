<html>
<head>
    <meta charset="utf-8">
    <title>Kenya@2013-Presidential Results</title>
    <script src="./js/d3.min.js"></script><!--
    <script src="d/k-counties.js"></script>-->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
 
    <style>
		body {
                    background: whitesmoke;
		}
		.svg-container { 
				display: inline-block;
				position: relative;
				width: 100%;
				padding-bottom: 100%; 
				vertical-align: middle; 
				overflow: hidden; 
		}
		.svg-content { 
				display: inline-block;
				position: absolute;
				top: 0;
				left: 0;
		}
		svg {
                    font-family: sans-serif;
                    font-size: 10px;
                    font-weight: normal;
                    margin: 0 auto;
                    display: block;
                }
		h1 {
                    text-align: center;
                    text-transform: uppercase;
                    font-size: 2em;
                    font-weight: 100;
                    color: #bb5DAA;
		}
		h2 {
                    text-align: center;
                    text-transform: uppercase;
                    font-size: 1.6em;
                    font-weight: 100;
                    color: #005DAA;
		}
		.county {
                    stroke: #ff0;
                    fill:#32FF45;
		}
		.county:hover {
                    fill: #00FFFF;
                    cursor: pointer;   
		} 
		text.halo {
			opacity: 0.7;
			stroke: #fff;
			stroke-width: 2px;
		}
	  
		.tooltip {
			position: absolute;
			text-align: center;
			width: 100px;
			height: 60px;
			padding-top: 10px;
			font: 12px sans-serif;
			background: lightsteelblue;
			border: 0px;
			border-radius: 8px;
			pointer-events: pointer;
			top: 50px;
			left: 550px;
		}
    </style>
</head>
<body>
  <script>
        
    var width = window.innerWidth,
        height = window.innerHeight;
    
    var svg = d3.select( "body" )
        .append( "svg" )
        .attr( "width", width )
        .attr( "height", height )
        .call(d3.behavior.zoom()
        .on("zoom", redraw))
        .append("svg:g");
         
    function redraw(){
            svg.attr("transform", "translate("+d3.event.translate+")scale("+d3.event.scale+")");
            /*.style("font-size", function(){return 10 / (d3.event.scale) + "px";})*/
        };
      
    //create Kenya mercator projection, centered on Nairobi
	var projection = d3.geo.mercator()
		.center([39.03111,0.25141])
		.scale([3600])
		.translate([width/2, height/2]);
        
     //create svg path generator using the projection
    var geoPath = d3.geo.path()
        .projection(projection);
        
    //quantized colors
    var color = d3.scale.linear()
		.range(["#FFA500","#ed1e07"]);
    
    //tooltip
    var tooltip = d3.select("body").append("div").attr("class", "tooltip");
	
    //csv
	d3.csv("d/iebc-2017.csv", function(data) {
		/*color domains
		color.domain([
				d3.min(data, function(d) { return d.margin2017; }),
				d3.max(data, function(d) { return d.margin2017; })
				]);
				
	//load json*/
	d3.json("d/k-counties.json", function(json) {
		
		//Merge the election data and GeoJSON
		//Loop through once for each election data value
		for (var i = 0; i < data.length; i++) {
			
			//Grab County codes
			var dataCode = data[i].codes;
			
			//Grab data value, and convert from string to float
			var dataMargin = parseFloat(data[i].margin2017);
			var dataUhuru = parseFloat(data[i].UhuruVotes);
			var dataRaila = parseFloat(data[i].RailaVotes);
		
			//Find the corresponding state inside the GeoJSON
			for (var j = 0; j < json.features.length; j++) {
				var jsonCode = json.features[j].properties.ccodes;
					if (dataCode == jsonCode) {

						//Copy the data value into the JSON
						json.features[j].properties.margin = dataMargin;
						json.features[j].properties.uhuru = dataUhuru;
						json.features[j].properties.raila = dataRaila;

						//Stop looking through the JSON
						break;
					}
			}
		}
				
		svg.selectAll("path")
			.data(json.features)
			.enter()
			.append("path")
			.attr("d", geoPath)
			.style("fill", function(d) {
				//Get data value
				var mar = d.properties.margin;
				if (mar < 0) {
					return "#FFA500";
				} else {
					return "#ed1e07";
				}
			})
			.style("stroke-width", "1")
			.style("stroke", "white")
			.attr("class","county")
			.on("mouseover", function(d){
				/*d3.select("h1").text(d.properties.id);
				d3.select("h2").text(d.properties.Name);
				d3.select(this).attr("class","county hover");*/
                tooltip.html(d.properties.Name +"<br>"+"Uhuru: "+
						d.properties.uhuru +"<br>"+"Raila: "+d.properties.raila);
				})
			.on("mouseout", function(d){
				/*d3.select("h1").text("");
				d3.select("h2").text("");
				d3.select(this).attr("class","county");*/
                 tooltip.html("");
				});
				
			var labels = svg.append('g').attr('class', 'labels');
			//Labels with halo effect
			labels.selectAll('.label').data(json.features).enter().append('text')
				.attr("class", "halo")
				.attr('transform', function(d) {
					return "translate(" + geoPath.centroid(d) + ")";
				})
				.style('text-anchor', 'middle')
				.text(function(d) {
					return d.properties.ccodes
				});
			//Adds the label placement 
			labels.selectAll('.label').data(json.features).enter().append('text')
				.attr("class", "label")
				.attr('transform', function(d) {
					return "translate(" + geoPath.centroid(d) + ")";
				})
				.style('text-anchor', 'middle')
				.text(function(d) {
					return d.properties.ccodes
				});
			
		});
});	
  </script>
</body>
</html>
